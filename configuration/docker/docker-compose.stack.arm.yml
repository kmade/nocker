# export KMADE_STACK=kmade
# export SWARM_NODE_ID=$(docker node inspect --format '{{ .ID }}' self)
# export CERTBOTMODE=staging
# docker stack deploy -c docker-compose.df.yml kmade --resolve-image=never
# docker stack deploy -c docker-compose.prod.yml kmade --resolve-image=never
#
# docker service rm $(docker service ls | grep 'kmade_' | awk '{print $2}')
# docker exec -it $(docker ps | grep 'kmade_letsencrypt.1' | awk '{print $11}') cat /var/log/letsencrypt/letsencrypt.log
version: "3.3"
networks:
  frontend-net:
      driver: overlay
  backend-net:
      driver: overlay

services:
  swarm-proxy:
    environment:
      - MODE=swarm
      - LISTENER_ADDRESS=swarm-listener
      - SERVICE_NAME=swarm-proxy
    image: ahaurw01/docker-flow-proxy:armhf
    networks:
      - frontend-net
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role==manager
  swarm-listener:
    image: ahaurw01/docker-flow-swarm-listener:armhf
    networks:
      - frontend-net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DF_NOTIFY_CREATE_SERVICE_URL=http://swarm-proxy:8080/v1/docker-flow-proxy/reconfigure
      - DF_NOTIFY_REMOVE_SERVICE_URL=http://swarm-proxy:8080/v1/docker-flow-proxy/remove
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role==manager

  letsencrypt:
    image: ahaurw01/docker-flow-letsencrypt:armhf
    networks:
      - frontend-net
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
    environment:
      - DOMAIN_1="('kmade.net' 'www.kmade.net' 'admin.kmade.net' 'status.kmade.net')"
      - CERTBOT_EMAIL=oancea.dragosh@gmail.com
      - PROXY_ADDRESS=swarm-proxy
      - CERTBOTMODE=staging
      - CERTBOT_CRON_RENEW="('0 3 * * *' '0 15 * * *')"
    deploy:
      labels:
        com.df.servicePath: "/.well-known/acme-challenge"
        com.df.distribute: "true"
        com.df.notify: "true"
        com.df.port: 80
      replicas: 1
      placement:
        constraints:
          - node.role==manager
  nginx:
    image: arm32v7/nginx
    networks:
      - frontend-net
    # ports:
    #   - "80:80"
    #   - "443:443"
    volumes:
      - ./configuration/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configuration/ssl/:/etc/nginx/ssl
    deploy:
      replicas: 1
      labels:
        com.df.serviceDomain: "kmade.net"
        com.df.notify: "true"
        com.df.httpsOnly: "true"
        com.df.distribute: "true"
        com.df.servicePath: "/"
        com.df.addReqHeader: "X-Forwarded-For %[src]"
        com.df.port: 80
  app:
    image: kmade/arm32v7.app
    networks:
      - frontend-net
    deploy:
      replicas: 1
    command: npm run start:dev
  api:
    image: kmade/arm32v7.api
    networks:
      - frontend-net
      - backend-net
    deploy:
      replicas: 1
  service-http:
    networks:
      - backend-net
    image: kmade/arm32v7.service-http
    deploy:
      replicas: 1
