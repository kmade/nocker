worker_processes  1;

events {
   worker_connections  1024;
}

http {
  resolver 127.0.0.11 valid=60s ipv6=off;
  resolver_timeout 10s;
  ##
  # Basic Settings
  ##

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;
  # server_tokens off;

  # server_names_hash_bucket_size 64;
  # server_name_in_redirect off;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  ##
  # Logging Settings
  ##

  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;

  ##
  # Gzip Settings
  ##

  gzip on;
  gzip_disable "msie6";

  server {
    listen 80;
    listen 443 default_server ssl;
    ssl_certificate /etc/nginx/ssl/dummy.crt;
    ssl_certificate_key /etc/nginx/ssl/dummy.key;

    root /usr/share/nginx/html;
    index index.html index.htm;

    # Make site accessible from http://localhost/
    server_name localhost;

    location ~* \.(?:manifest|appcache|html?|xml|json)$ {
      expires -1;
      # access_log logs/static.log; # I don't usually include a static log
    }

    location ~* \.(?:css|js)$ {
      try_files $uri =404;
      expires 1y;
      access_log off;
      add_header Cache-Control "public";
    }

    # Any route containing a file extension (e.g. /script.js)
    location ~ ^.+\..+$ {
      try_files $uri =404;
    }

    # Any route that doesn't have a file extension (e.g. /devices)
    location / {
      try_files $uri $uri/ /index.html;
    }

    # API Gateway route
    location  ~* /api/?(.*) {
      proxy_pass http://api/$1;
    }

    # location /app {
    #   alias /usr/share/nginx/html/app;
    # }
    # location ~ /([^/]*?) {
    #   root /usr/share/nginx/html/$1;
    # }
    # redirect to main app
    # location = / {
    #   return 301 /app;
    # }

  }
}
